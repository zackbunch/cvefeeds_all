"use client"

import { useState } from "react"
import { AlertTriangle } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"

type Vulnerability = {
  id: string
  name: string
  cvss: number
  exploited: boolean
  references: string[]
}

const mockVulnerabilities: Vulnerability[] = [
  {
    id: "CVE-2023-1234",
    name: "Critical RCE in Popular CMS",
    cvss: 9.8,
    exploited: true,
    references: [
      "https://cisa.gov/known-exploited-vulnerabilities-catalog",
      "https://vendor.com/advisory/cve-2023-1234",
    ],
  },
  {
    id: "CVE-2023-5678",
    name: "Privilege Escalation in Database Software",
    cvss: 8.4,
    exploited: true,
    references: ["https://cisa.gov/known-exploited-vulnerabilities-catalog"],
  },
  {
    id: "CVE-2023-9012",
    name: "SQL Injection in E-commerce Platform",
    cvss: 7.5,
    exploited: false,
    references: ["https://vendor.com/advisory/cve-2023-9012"],
  },
]

export function ExploitedVulnerabilities() {
  const [vulnerabilities, setVulnerabilities] = useState(mockVulnerabilities)

  return (
    <div className="space-y-4">
      <div className="overflow-x-auto">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead className="w-[100px]">CVE ID</TableHead>
              <TableHead>Name</TableHead>
              <TableHead className="w-[80px]">CVSS</TableHead>
              <TableHead className="w-[100px]">Status</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {vulnerabilities.map((vuln) => (
              <TableRow key={vuln.id}>
                <TableCell className="font-mono">{vuln.id}</TableCell>
                <TableCell>{vuln.name}</TableCell>
                <TableCell>{vuln.cvss.toFixed(1)}</TableCell>
                <TableCell>
                  {vuln.exploited && (
                    <span className="flex items-center text-red-500">
                      <AlertTriangle className="mr-1 h-4 w-4" />
                      Exploited
                    </span>
                  )}
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </div>
      <div className="flex flex-col sm:flex-row justify-between items-center">
        <p className="text-sm text-muted-foreground mb-2 sm:mb-0">Showing {vulnerabilities.length} vulnerabilities</p>
        <Button variant="outline" size="sm">
          View All
        </Button>
      </div>
    </div>
  )
}

